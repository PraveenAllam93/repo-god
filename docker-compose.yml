services:

  qdrant:
    container_name: rg-qdrant
    image: qdrant/qdrant
    platform: linux/amd64
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-storage:/qdrant/storage:z
    networks:
      - net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 30s

  mongo:
    container_name: rg-mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - net
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_USER}", "--password", "${MONGO_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-express:
    container_name: rg-mongo-express
    image: mongo-express:latest
    restart: on-failure:5
    ports:
      - "9998:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=rg-mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - net
  
  redis:
    container_name: rg-redis
    image: redis:7.4.1
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - net
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  redis-commander:
    container_name: rg-redis-commander
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    restart: on-failure:5
    ports:
      - "9997:8081"
    environment:
      -  REDIS_HOSTS=local:rg-redis:6379:0:${REDIS_PASSWORD}
    depends_on:
      redis:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
  qdrant-storage:
